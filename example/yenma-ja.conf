# $Id$
#
# example and description of yenma.conf


# [ソケット指定書式]
# - TCP ソケットの場合
#   [address-family ":"] port ["@" address]
# - address-family: アドレスファミリ。"inet" (IPv4) か "inet6" (IPv6) のいずれか。
#                   無指定の場合は自動的に判定する。
# - port: ポート番号
# - address: listen する IP アドレス。無指定の場合は INADDR_ANY, in6addr_any 相当。
# - UNIX ドメインソケットの場合
#   "unix:" path
#   - path: UNIX ドメインソケットへのパス
#
# [ブール値]
# ブール値は正負それぞれ以下の値を認識する:
#   正: "true", "yes", "1"
#   負: "false", "no", "0"


## YENMA を動作させるディレクトリ。
## 無指定の場合は起動時のディレクトリをそのまま使用する。
## 有効な値: パス
## デフォルト値: (無指定)
# Service.Chdir:

## PID ファイルのパス
## 有効な値: パス
## デフォルト値:/var/run/yenma.pid
Service.PidFile: /var/run/yenma.pid

## YENMA を動作させるユーザー。
## 無指定の場合は起動したユーザーをそのまま使用する。
## 有効な値: ユーザー名
## デフォルト値: (無指定)
# Service.User:

## 制御用ソケットの指定。指定しない場合、制御用ソケットは開かれない。
## 有効な値: ソケット
## デフォルト値: (無指定)
# Service.ControlSocket:

## graceful shutdown 実行時に connection がなくなるのを待つ時間。
## 単位は秒。0 を指定すると無制限に待つ。[Reloadable]
## 有効な値: 非負整数値 (秒)
## デフォルト値: 0
Service.GracefulShutdownTimeout: 0

## 起動後に stdin, stdout, stderr を /dev/null で置き換えない。
## デバッグ専用機能。
## 有効な値: ブール値
## デフォルト値: false
Service.HoldTtyOpen: false

## 検証処理の対象外とする接続元の IP アドレスブロック。
## 通常は内部ネットワークを指定する。CIDR 表記を利用可能。
## ブロックを複数指定する場合はカンマで区切る。[Reloadable]
## 有効な値: カンマで区切った IP アドレスブロック
## デフォルト値: (無指定)
# Service.ExclusionBlocks:

## syslog で使用する facility
## 有効な値: 各 OS で有効な syslog facility
## デフォルト値: mail
Logging.Facility: mail

## ログマスク。指定したログレベル以上のログを出力する。
## 有効な値: syslog で使用されるログレベル
##            ("emerg", "alert", "crit", "err", "warning", "notice", "info", "debug")
## デフォルト値: info
Logging.Mask: info

## syslog で識別子として使用する文字列
## 有効な値: 任意の文字列
## デフォルト値: yenma
Logging.Ident: yenma

## MTA からの接続を受け付けるソケット
## 有効な値: ソケット
## デフォルト値: unix:/var/run/yenma.sock
Milter.Socket: unix:/var/run/yenma.sock

## Milter ソケットのタイムアウト。単位は秒。
## 0 は「無制限に待つ」ではなく、「待たない」を意味することに注意。
## 負値を指定するとデフォルト値である 7210 [s] が使用される。
## 有効な値: 整数値 (秒)
## デフォルト値: -1
Milter.Timeout: -1

## Milter ソケットを listen() する際の backlog の値
## 有効な値: 整数値
## デフォルト値: 100
Milter.Backlog: 100

## libmilter が出力するログのレベル。smfi_setdbg() にそのまま渡される。
## 詳細は libmilter の smfi_setdbg() のマニュアルを参照のこと。
## 有効な値: 0 から 6 の間の整数
## デフォルト値: 0
Milter.DebugLevel: 0

## MTA から QID を取得するタイミングの調整。
## MTA が Postfix の場合は true を、Sendmail の場合は false を指定する。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
Milter.LazyQidFetch: false

## 使用するリゾルバライブラリの指定。"ldns", "libbind" のいずれか。
## 指定したライブラリがビルド時に組み込まれていなければならない。
## 無指定の場合は有効なライブラリを ldns -> libbind の順に探索し選択する。[Reloadable]
## 有効な値: "ldns", "libbind" (ビルド時に組み込んだもの)
## デフォルト値: (無指定)
# Resolver.Engine:

## リゾルバの設定ファイルを指定する。resolv.conf 相当。
## ldns を使っている場合のみ有効。無指定の場合は /etc/resolv.conf が使われる。[Reloadable]
## 有効な値: パス
## デフォルト値: (無指定)
# Resolver.ConfigFile:

## プールするリゾルバのインスタンスの数。
## Milter 単体が処理する定常時の最大並列度を目安に設定すればよい。[Reloadable]
## 有効な値: 非負整数値
## デフォルト値: 256
Resolver.PoolSize: 256

## リゾルバが問い合わせをおこなう際のタイムアウト。単位は秒。
## Resolver.ConfigFile で指定された設定を上書きする。
## 負値を指定すると上書きせずに Resolver.ConfigFile による設定が有効になる。[Reloadable]
## 有効な値: 整数値
## デフォルト値: -1
Resolver.Timeout: -1

## リゾルバが問い合わせをおこなう際のリトライ回数。
## Resolver.ConfigFile で指定された設定を上書きする。
## 負値を指定すると上書きせずに Resolver.ConfigFile による設定が有効になる。[Reloadable]
## 有効な値: 整数値
## デフォルト値: -1
Resolver.RetryCount: -1

## Authentication-Results ヘッダ中で使われる識別子。
## 無指定の場合は gethostname() で取得したホスト名を使用する。[Reloadable]
## 有効な値: 任意の文字列
## デフォルト値: (無指定)
AuthResult.ServId:

## SPF および Sender ID の評価結果として "fail" の代わりに "hardfail" を使用する。
## RFC 5451 との互換性のため。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
AuthResult.UseSpfHardfail: false

## SPF の検証を有効にする。[Reloadable]
## 有効な値: ブール値
## デフォルト値: true
SPF.Verify: true

## SPF の検証結果が失敗だった場合に "exp=" modifier の内容を
## Authentication-Results ヘッダの reasonspec に記述する。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
SPF.AppendExplanation: false

## SPF レコードを問い合わせる際、SPF RR (type 99) の探索を有効にする。
## RFC 4408 との互換性のため。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
SPF.LookupSPFRR: false

## SPF 評価の際に、"+all" というディレクティブに遭遇したらログに記録する。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
SPF.LogPlusAllDirective: false

## SPF 評価の際に、正常とみなす "void lookups" の数。
## 負値を指定すると無制限。[Reloadable]
## 有効な値: 整数値
## デフォルト値: 2
SPF.VoidLookupLimit

## Sender ID の検証を有効にする。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
SIDF.Verify: false

## Sender ID の検証結果が失敗だった場合に "exp=" modifier の内容を
## Authentication-Results ヘッダの reasonspec に記述する。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
SIDF.AppendExplanation: false

## SPF レコードを問い合わせる際、SPF RR (type 99) の探索を有効にする。
## RFC 4408 との互換性のため。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
SIDF.LookupSPFRR: false

## Sender ID 評価の際に、"+all" というディレクティブに遭遇したらログに記録する。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
SIDF.LogPlusAllDirective: false

## Sender ID 評価の際に、正常とみなす "void lookups" の数。
## 負値を指定すると無制限。[Reloadable]
## 有効な値: 整数値
## デフォルト値: 2
SIDF.VoidLookupLimit

## DKIM の検証を有効にする。[Reloadable]
## 有効な値: ブール値
## デフォルト値: true
Dkim.Verify: true

## 有効期限の切れた DKIM 署名を受け付ける。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
Dkim.AcceptExpiredSignature: false

## 未来のタイムスタンプを持つ DKIM 署名を受け付ける。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
Dkim.AcceptFutureSignature: false

## 検証する1通あたりの DKIM 署名の最大数。[Reloadable]
## 有効な値: 正整数値
## デフォルト値: 3
Dkim.SignHeaderLimit: 3

## RFC 4871 との互換性を維持する。公開鍵レコードの key-g-tag を評価する。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
Dkim.Rfc4871Compatible: false

## 有効な署名として認めるRSA鍵長の最小サイズを指定する。[Reloadable]
## 有効な値: 正整数値
## デフォルト値: 0
Dkim.MinRSAKeyLength: 0

## DKIM-ATPS の検証を有効にする。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
DkimAtps.Verify: false

## DKIM-ADSP の検証を有効にする。
## この設定を有効にすると、DKIM の検証も自動的に有効になる。[Reloadable]
## 有効な値: ブール値
## デフォルト値: false
DkimAdsp.Verify: false

## DMARC の検証を有効にする。
## この設定を有効にすると、SPF と DKIM の検証も自動的に有効になる。[Reloadable]
## 有効な値: ブール値
## デフォルト値: true
Dmarc.Verify: true

## Virtual DMARC の検査モードを指定する。
## Virtual DMARC は、 DMARC 検査時に DMARC レコードが見つからなかった場合にデフォルトの DMARC ポリシーを参照する機能。
## デフォルトの DMARC ポリシーの aspf, adkim の値をいずれも r とする場合は relax, s とする場合は strict を指定する。
## Virtual DMARC の機能を使用しない場合は none を指定する。[Reloadable]
## 有効な値: relax, strict, none
## デフォルト値: none
Dmarc.VdmarcVerification: none

## public suffix のリストを保持するファイルへのパス。
## リストは https://publicsuffix.org/list/ などから入手可能。
## DMARC の検証を有効にする場合は指定必須。[Reloadable]
## 有効な値: パス
## デフォルト値: (無指定)
Dmarc.PublicSuffixList:

## DMARC の検証に失敗したメッセージの Author Domain が p=reject ポリシーの場合にとるアクション。
## 有効な値: none, discard, reject, tempfail のいずれか
## デフォルト値: reject
Dmarc.RejectAction: reject

## DMARC "p=reject" を宣言するドメインを騙るメッセージに対する SMTP Response Code。
## Dmarc.RejectAction が "reject" または "tempfail" の場合のみ使用される。
## reject の場合は先頭が '5'、tempfail の場合は先頭が '4' でなければならない。
## デフォルト値: 550
Dmarc.RejectReplyCode: 550

## DMARC "p=reject" を宣言するドメインを騙るメッセージに対する SMTP Enhanced Status Code。
## Dmarc.RejectAction が "reject" または "tempfail" の場合のみ使用される。
## reject の場合は先頭が '5'、tempfail の場合は先頭が '4' でなければならない。
## デフォルト値: 5.7.1
Dmarc.RejectEnhancedStatusCode: 5.7.1

## DMARC "p=reject" を宣言するドメインを騙るメッセージに対する SMTP Response のメッセージ。
## Dmarc.RejectAction が "reject" または "tempfail" の場合のみ使用される。
## 有効な値: 任意の文字列
## デフォルト値: Email rejected per DMARC policy
Dmarc.RejectMessage: Email rejected per DMARC policy
