
               How to Install YENMA

* Supported OSes
  - Linux
  - FreeBSD, NetBSD
  - Solaris 10 or later

* Necessary software programs
  - GNU C Compiler
  - GNU Make
  - OpenSSL (0.9.8 or later)
  - resolver library
    - ldns (1.6.0 or later)
    or
    - libbind (bind 9, libbind 6.0 or later)
  - libmilter (sendmail 8.13 or later)

* Steps for building and executing

  1. Extracting

    $ tar xzf yenma-x.y.z.tar.gz
    $ cd yenma-x.y.z

  2. Installing dependent libraries

    To install OpenSSL, ldns and libmilter, please refer to "Building
    dependent libraries" below.

  3. Executing configure

    If you want to install headers and libraries of OpenSSL, ldns and libmilter
    to "/usr/local" directory, execute "configure" without options.

    $ ./configure

    If you want to install these libraries to other directories,
    please specify the base directories with the --with-ssl,
    --with-ldns and --with-libmilter options respectively.

    The following example is the case that the base directory of OpenSSL is
    "/foo", that of ldns is "/bar" and that of libmilter is "/baz".

    $ ./configure --with-ssl=/foo --with-ldns=/bar --with-libmilter=/baz

  4. Building

    $ make

  5. Installing

    $ sudo make install

  6. Editing the configuration file

    $ sudo cp yenma/etc/yenma.conf /etc/yenma.conf
    $ su vi /etc/yenma.conf

  7. Creating the directory for the PID file

    You need to change permission so that PID files can be created
    in the directory specified by "Service.PidFile"
    by the user specified by "Service.User".

    $ sudo mkdir -p /var/run/yenma
    $ sudo chown daemon:daemon /var/run/yenma
    $ sudo chmod 700 /var/run/yenma

  8. Executing

    $ sudo /usr/local/libexec/yenma -c /etc/yenma.conf

* Configuring MTA

  You should configure MTA so as to use YENMA when it receives messages.

  - sendmail

    Specify the milter socket of YENMA with MAIL_FILTER or
    INPUT_MAIL_FILTER macro in the .mc file.
    Then, generate sendmail.cf.

    Example of using the default socket of YENMA:

        INPUT_MAIL_FILTER(`yenma', `S=inet:10025@127.0.0.1')dnl

    For more information on INPUT_MAIL_FILTER, please refer to
    cf/README and other documents in the sendmail package.

  - postfix (2.4 or later)

    Set "Milter.LazyQidFetch" in the configuration file of YENMA to "true".
    Set smtpd_milters in the main.cf file to the milter socket of YENMA.

    Example of using the default socket of YENMA:

        smtpd_milters = inet:127.0.0.1:10025

    For more information on milter support of postfix, please refer to
    README_FILES/MILTER_README in the postfix package.

* Building dependent libraries

  This is an example to install the libraries to /usr/local directory.

  - OpenSSL

    $ tar zxf openssl-x.y.z.tar.gz
    $ cd openssl-x.y.z
    $ ./config threads shared --prefix=/usr/local
    $ make
    $ sudo make install

  - ldns

    $ tar zxf ldns-x.y.z.tar.gz
    $ cd ldns-x.y.z
    $ ./configure --prefix=/usr/local --with-ssl=/usr/local
    $ make
    $ sudo make install

  - libbind

    $ tar zxf bind-x.y.z
    $ cd bind-x.y.z/lib/bind
    $ ./configure --prefix=/usr/local --enable-threads --with-libtool --enable-ipv6
    $ make
    $ sudo make install

  - libmilter

    $ tar zxf sendmail.x.y.z.tar.gz
    $ cd sendmail-x.y.z

    - Add the following settings to devtools/Site/site.config.m4

    define(`confINCLUDEDIR', `/usr/local/include')
    define(`confLIBDIR', `/usr/local/lib')
    APPENDDEF(`confINCDIRS', `-I/usr/local/bind/include')
    APPENDDEF(`confLIBS', `/usr/local/lib/libbind.a')
    # Please add other setting appropriate to your OS.

    $ cd libmilter
    $ ./Build
    $ sudo ./Build install

  For more information about installation of OpenSSL, ldns and
  libmiter, please refer to manuals in each package.

* Notes on building YENMA for the multiple user environments

  - Specifying SM_CONF_POLL for libmilter

    If select() is used for the communication with sendmail,
    file descriptors with the size over FD_SETSIZE cannot be handled.
    In such a case, poll() should be used instead.
    Please define SM_CONF_POLL when building libmilter.

      # Setting to be added to site.config.m4
      APPENDDEF(`confENVDEF', `-DSM_CONF_POLL=1')

  - Specifying "-m64" option of gcc on SPARC Solaris

    The fopen() of 32bit version of Solaris, which is used in libbind,
    cannot handle file descriptors over 255.
    In such a case, please specify "-m64" option when building
    the dependent libraries and YENMA, which enables to generate code
    for the 64bit environment.

    - libbind

      $ ./configure CFLAGS=-m64 LDFLAGS=-m64

    - libmilter

      # Setting to be added to site.config.m4
      APPENDDEF(`confENVDEF', `-DSM_CONF_POLL=1')
      APPENDDEF(`confCCOPTS', `-m64')

    - YENMA

      $ ./configure CFLAGS=-m64 LDFLAGS=-m64

$Id$
